一、services.jar优化
打开/system/framework/services.jar，以Dex++编辑器打开classes.dex。

1、【手势与按键共存教程】
路径：smali\com\android\server\policy\BaseMiuiPhoneWindowManager.smali
搜索方法名：shouldInterceptKey
.method private shouldInterceptKey(IZZ)Z
   .registers 10

   const/4 v0, 0x0

   return v0
.end method

2、【允许所有应用强制停止教程】
路径：smali\com\android\server\policy\BaseMiuiPhoneWindowManager.smali
搜索方法名：closeapp，然后搜索关键词“mSystemKeyPackages”，将下面的 if-eqz v8 改为 goto。
   move-result v8

   goto :goto_bd

3、【允许冻结所有应用教程】
路径：smali\com\android\server\pm\PackageManagerServiceInjector.smali
搜索方法名：isAllowedDisable
.method static isAllowedDisable(Ljava/lang/String;I)Z
   .registers 4

   const/4 v0, 0x1

   return v0
.end method

4、【去除卡米限制教程】
路径：smali\com\miui\server\SecurityManagerService.smali
搜索方法名：checkSystemSelfProtection
把line中间那三段代码删除，即含有Lcom/miui/server/SecurityManagerService$1的代码。
.method private checkSystemSelfProtection(Z)V
   .registers 3
   .param p1, "onlyCore"    # Z

   return-void
.end method

5、【秒截图教程】
路径：smali\com\android\server\policy\PhoneWindowManager.smali
搜索方法名：getScreenshotChordLongPressDelay
.method private getScreenshotChordLongPressDelay()J
   .registers 4

   const-wide/16 v1, 0x0

   move-wide v0, v1

   return-wide v0
.end method

6、【添加高级电源教程】
路径：smali\com\android\server\policy\MiuiGlobalActions$1.smali
搜索关键词：const-string/jumbo v0, "shutdown"，并替换为以下代码：

# virtual methods
.method public onCommand(Ljava/lang/String;Ljava/lang/Double;Ljava/lang/String;)V
   .registers 8
   .param p1, "command"  # Ljava/lang/String;
   .param p2, "para1"  # Ljava/lang/Double;
   .param p3, "para2"  # Ljava/lang/String;

   .prologue
   const/4 v1, 0x0

   const-string v0, "airplane"

   invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

   move-result v0

   if-eqz v0, :cond_11

   iget-object v0, p0, Lcom/android/server/policy/MiuiGlobalActions$1;->this$0:Lcom/android/server/policy/MiuiGlobalActions;

   const/16 v1, 0x9

   invoke-static {v0, v1}, Lcom/android/server/policy/MiuiGlobalActions;->access$000(Lcom/android/server/policy/MiuiGlobalActions;I)V

   :cond_10
   :goto_10
   return-void

   :cond_11
   const-string/jumbo v0, "silent"

   invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

   move-result v0

   if-eqz v0, :cond_21

   iget-object v0, p0, Lcom/android/server/policy/MiuiGlobalActions$1;->this$0:Lcom/android/server/policy/MiuiGlobalActions;

   const/4 v1, 0x5

   invoke-static {v0, v1}, Lcom/android/server/policy/MiuiGlobalActions;->access$000(Lcom/android/server/policy/MiuiGlobalActions;I)V

   goto :goto_10

   :cond_21
   const-string/jumbo v0, "reboot"

   invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

   move-result v0

   if-eqz v0, :cond_37

   :try_start_2a
   invoke-static {}, Lcom/android/server/policy/MiuiGlobalActions;->access$100()Landroid/os/IPowerManager;

   move-result-object v0

   const/4 v1, 0x0

   const/4 v2, 0x0

   const/4 v3, 0x0

   invoke-interface {v0, v1, v2, v3}, Landroid/os/IPowerManager;->reboot(ZLjava/lang/String;Z)V
   :try_end_34
   .catch Landroid/os/RemoteException; {:try_start_2a .. :try_end_34} :catch_35

   goto :goto_10

   :catch_35
   move-exception v0

   goto :goto_10

   :cond_37
   const-string/jumbo v0, "recovery"

   invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

   move-result v0

   if-eqz v0, :cond_4f

   :try_start_40
   invoke-static {}, Lcom/android/server/policy/MiuiGlobalActions;->access$100()Landroid/os/IPowerManager;

   move-result-object v0

   const/4 v1, 0x0

   const-string/jumbo v2, "recovery"

   const/4 v3, 0x0

   invoke-interface {v0, v1, v2, v3}, Landroid/os/IPowerManager;->reboot(ZLjava/lang/String;Z)V
   :try_end_4c
   .catch Landroid/os/RemoteException; {:try_start_40 .. :try_end_4c} :catch_4d

   goto :goto_10

   :catch_4d
   move-exception v0

   goto :goto_10

   :cond_4f
   const-string v0, "bootloader"

   invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

   move-result v0

   if-eqz v0, :cond_65

   :try_start_57
   invoke-static {}, Lcom/android/server/policy/MiuiGlobalActions;->access$100()Landroid/os/IPowerManager;

   move-result-object v0

   const/4 v1, 0x0

   const-string v2, "bootloader"

   const/4 v3, 0x0

   invoke-interface {v0, v1, v2, v3}, Landroid/os/IPowerManager;->reboot(ZLjava/lang/String;Z)V
   :try_end_62
   .catch Landroid/os/RemoteException; {:try_start_57 .. :try_end_62} :catch_63

   goto :goto_10

   :catch_63
   move-exception v0

   goto :goto_10

   :cond_65
   const-string/jumbo v0, "shutdown"

   invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

   move-result v0

   if-eqz v0, :cond_79

   new-instance v0, Lcom/android/server/policy/MiuiGlobalActions$1$1;

   const-string v1, "ShutdownThread"

   invoke-direct {v0, p0, v1}, Lcom/android/server/policy/MiuiGlobalActions$1$1;-><init>(Lcom/android/server/policy/MiuiGlobalActions$1;Ljava/lang/String;)V

   invoke-virtual {v0}, Lcom/android/server/policy/MiuiGlobalActions$1$1;->start()V

   goto :goto_10

   :cond_79
   const-string v0, "dismiss"

   invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

   move-result v0

   if-eqz v0, :cond_10

   iget-object v0, p0, Lcom/android/server/policy/MiuiGlobalActions$1;->this$0:Lcom/android/server/policy/MiuiGlobalActions;

   invoke-static {v0}, Lcom/android/server/policy/MiuiGlobalActions;->access$200(Lcom/android/server/policy/MiuiGlobalActions;)Landroid/os/Handler;

   move-result-object v0

   invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

   goto :goto_10
.end method

二、其他优化
1、【双排信号教程】
首先找到/system/priv-app/MiuiSystemUI/MiuiSystemUI.apk
打开里面的classes.dex

9.0搜索
iget-boolean v0, p0, Lcom/android/systemui/statusbar/SignalClusterView;->mNotchEar:Z
10.0搜索
iget-boolean p0, p0, Lcom/android/systemui/statusbar/SignalClusterView;->mNotchEar:Z

点击第一条记录
9.0在下面添加const/4 v0, 0x1
10.0在它下面添加const/4 p0, 0x1

再搜索invoke-direct {p0}, Lcom/android/systemui/statusbar/SignalClusterView;->notchEarDualEnable()Z
点击第一条记录
9.0把它下面的move-result v0改成const/4 v0, 0x1
10.0把它下面的move-result p0改成const/4 p0, 0x1

退出保存重启即可。

2、【MIUI状态栏显示天气】
将下载的classes2.dex文件
移动到/system/priv-app/MiuiSystemUI/MiuiSystemUI.apk，打开/res/layout/quick_status_bar_expanded_header.xml进行反编译，并把下面这段代码加在<ImageView前面

<com.android.systemui.statusbar.WeatherView android:textAppearance="@style/TextAppearance.StatusBar.Expanded.Weather" 
android:textSize="10dp"
android:layout_gravity="center_vertical" android:layout_width="wrap_content" android:layout_height="wrap_content" />

退出保存重启即可。
