一、services.jar优化
打开/system/framework/services.jar，以Dex++编辑器打开classes.dex。

1、【手势与按键共存教程】
路径：smali\com\android\server\policy\BaseMiuiPhoneWindowManager.smali
搜索方法名：shouldInterceptKey
.method private shouldInterceptKey(IZZ)Z
   .registers 10

   const/4 v0, 0x0

   return v0
.end method

2、【允许所有应用强制停止教程】
路径：smali\com\android\server\policy\BaseMiuiPhoneWindowManager.smali
搜索方法名：closeapp，然后搜索关键词“mSystemKeyPackages”，将下面的 if-eqz v8 改为 goto。
   move-result v8

   goto :goto_bd

3、【允许冻结所有应用教程】
路径：smali\com\android\server\pm\PackageManagerServiceInjector.smali
搜索方法名：isAllowedDisable
.method static isAllowedDisable(Ljava/lang/String;I)Z
   .registers 4

   const/4 v0, 0x1

   return v0
.end method

4、【去除卡米限制教程】
路径：smali\com\miui\server\SecurityManagerService.smali
搜索方法名：checkSystemSelfProtection
把line中间那三段代码删除，即含有Lcom/miui/server/SecurityManagerService$1的代码。
.method private checkSystemSelfProtection(Z)V
   .registers 3
   .param p1, "onlyCore"    # Z

   return-void
.end method

5、【秒截图教程】
路径：smali\com\android\server\policy\PhoneWindowManager.smali
搜索方法名：getScreenshotChordLongPressDelay
.method private getScreenshotChordLongPressDelay()J
   .registers 4

   const-wide/16 v1, 0x0

   move-wide v0, v1

   return-wide v0
.end method

6、【添加高级电源教程】
路径：smali\com\android\server\policy\MiuiGlobalActions$1.smali
搜索关键词：const-string/jumbo v0, "shutdown"，在此加上以下代码：

   :cond_37
   const-string/jumbo v0, "recovery"

   invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

   move-result v0

   if-eqz v0, :cond_4f

   :try_start_40
   invoke-static {}, Lcom/android/server/policy/MiuiGlobalActions;->access$100()Landroid/os/IPowerManager;

   move-result-object v0

   const/4 v1, 0x0

   const-string/jumbo v2, "recovery"

   const/4 v3, 0x0

   invoke-interface {v0, v1, v2, v3}, Landroid/os/IPowerManager;->reboot(ZLjava/lang/String;Z)V
   :try_end_4c
   .catch Landroid/os/RemoteException; {:try_start_40 .. :try_end_4c} :catch_4d

   goto :goto_10

   :catch_4d
   move-exception v0

   goto :goto_10

   :cond_4f
   const-string v0, "bootloader"

   invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

   move-result v0

   if-eqz v0, :cond_65

   :try_start_57
   invoke-static {}, Lcom/android/server/policy/MiuiGlobalActions;->access$100()Landroid/os/IPowerManager;

   move-result-object v0

   const/4 v1, 0x0

   const-string v2, "bootloader"

   const/4 v3, 0x0

   invoke-interface {v0, v1, v2, v3}, Landroid/os/IPowerManager;->reboot(ZLjava/lang/String;Z)V
   :try_end_62
   .catch Landroid/os/RemoteException; {:try_start_57 .. :try_end_62} :catch_63

   goto :goto_10

   :catch_63
   move-exception v0

   goto :goto_10
